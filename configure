#!/bin/bash

## Check that we are on Unix
uname=$(type -P uname)
if [ "${uname}" = "" ]; then
    echo "You do not have uname so this is unlikely to be a Unix system. Exiting."
    exit -1
fi

## Check for Linux or OSX
: ${R_HOME=$(R RHOME)}
sysname=$(${R_HOME}/bin/Rscript -e 'cat(Sys.info()["sysname"])')
if [ ${sysname} == "Linux" ]; then
    platform="linux"
elif [ ${sysname} == "Darwin" ]; then
    platform="osx"
else
    echo "Unsupported platform: $sysname"
    echo "Check http://www.bloomberglabs.com/api/libraries/ for possible support first."
    echo "Contributions welcome, see https://github.com/Rblp/blp for integration with Rblapi."
    exit -1
fi


## helper function to not rely on curl which at least on OS X fails to follow redirects
download() {
    url=${1}

    # because rscript is located in /usr/bin/Rscript sometimes
    # rs_path=$(which Rscript)  


    ## sadly, for Travis we cannot rely on R as it lacks libcurl
    libcurl=$(${R_HOME}/bin/Rscript -e 'cat(capabilities()[["libcurl"]])')
    ## so when we have libcurl in R, use it -- else fall back to curl
    if [ ${libcurl} == "TRUE" ]; then
        file=$(basename ${url})
        ${R_HOME}/bin/Rscript -e "download.file(\"${url}\", \"${file}\", quiet=TRUE, method='libcurl')"
    else
        curl -s -k -L -O ${url}
    fi
}

## Get and install header files
cwd=$(pwd)



# # # local testing only
# if [ ${platform} == "osx" ]; then
#     cp "/Users/christoph/x13/x13ashtml" "${cwd}/inst/include/x13ashtml"
# fi



if [ ${platform} == "linux" ]; then

    # TODO check linux platform
    
    # TODO compress


    echo "Try to download X-13 for Ubuntu"
    
    DLURL="https://github.com/christophsax/seasonalbin/blob/master/ubuntu/x13ashtml"
    
    # DLURL="https://github.com/christophsax/seasonalbin/blob/master/ubuntu/x13ashtml.tar.gz"

    # temporary direction for installation
    mkdir -p /tmp/x13dl

    cd /tmp/x13dl

    # download X-13-ARIMA-SEATS
    download $DLURL

    # extract X-13ARIMA-SEATS
    # tar xzv -C x13ashtml -f x13ashtml.tar.gz

    cp x13ashtml "${cwd}/inst/include/x13ashtml"

    rm -R /tmp/x13dl
fi




if [ ${platform} == "osx" ]; then


    gf=$(type -P gfortran)
    if [ "${gf}" = "" ]; then
        echo "You do not have gfortran which is needed for building X-13. You can download and install the newest version from here:"
        echo "http://coudert.name/software"
        exit -1
    fi

    # TODO: some check if gfortran is of the right version


    # gfortran --version
    # GNU Fortran (GCC) 5.2.0

    # the version on CRAN does not work for some reasons:
    # https://cran.r-project.org/bin/macosx/tools/gfortran-4.2.3.pkg

    # http://coudert.name/software/gfortran-5.2-Yosemite.dmg

    X13VERSION="V1.1_B19"
    DLURL="https://www.census.gov/ts/x13as/unix/x13ashtmlsrc_${X13VERSION}.tar.gz"


    # temporary direction for installation
    mkdir -p /tmp/x13dl
    mkdir -p /tmp/x13ashtmlsrc

    cd /tmp/x13dl


    # download X-13-ARIMA-SEATS
    download $DLURL

    # extract X-13ARIMA-SEATS
    tar xzv -C /tmp/x13ashtmlsrc -f x13ashtmlsrc_${X13VERSION}.tar.gz

    # prepare source code
    cd /tmp/x13ashtmlsrc

    # a) remove the -static option in line 291, which otherwise causes an error
    sed 's/ \-static / /' makefile.g77 > makefile.gfortran

    # b) renamed misspelled files
    mv ADJREG.f adjreg.f
    mv Acf.f acf.f

    echo "*** Building X-13 binaries ***"
    echo "(this may take several minutes)"

    make -f makefile.gfortran

    cp x13ashtml "${cwd}/inst/include/x13ashtml"

    rm -R /tmp/x13dl
    rm -R /tmp/x13ashtmlsrc
fi


exit 0
